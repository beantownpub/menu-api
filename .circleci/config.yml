version: 2.1
executors:
  debian:
    docker:
    - image: python:3.7-slim-buster

commands:
  install_yq:
    description: Install yq to get API version from swagger.yaml
    steps:
      - run:
          name: Install yq
          command: |
            sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
            sudo chmod a+x /usr/local/bin/yq
  install_version_dependencies:
    description: Install dependencies for versioning
    steps:
      - run:
          name: Install dependencies
          command: |
            apt-get update -y && apt-get install -y wget git
            wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
            chmod a+x /usr/local/bin/yq
  install_k8s_dependencies:
    description: Install dependencies for deploying to K8s cluster
    steps:
      - run:
          name: Install kubectl
          command: |
            sudo apt-get update -y && sudo apt-get install -y curl
            sudo curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
            kubectl config set-credentials jalbot --token=$JALBOT_TOKEN
            kubectl config set-cluster prod --server=$K8S_SERVER --insecure-skip-tls-verify=true
            kubectl config set-context jalbot --cluster=prod --user=jalbot
            kubectl config use-context jalbot
      - run:
          name: Install helm
          command: |
            sudo apt-get install apt-transport-https gnupg2 --yes
            sudo curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
            sudo echo "deb https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
            sudo apt-get update
            sudo apt-get install -y helm
  check_tags:
    description: Check if git tag matches swagger.yaml version
    steps:
      - run:
          name: Check tags
          command: |
            MENU_API_VERSION=$(yq eval '.info.version' swagger.yaml)
            GIT_TAG=$(git describe)
            if [ "$MENU_API_VERSION" != "$GIT_TAG" ]; then
                circleci-agent step halt
            fi

jobs:
  build_and_publish:
    executor: debian
    steps:
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run:
          name: Build Image
          command: |
            export MENU_API_VERSION=$(yq eval '.info.version' swagger.yaml)
            docker build -t menu_api:$MENU_API_VERSION .
      - check_tags
      - run:
          name: Publish Image
          command: |
            export MENU_API_VERSION=$(yq eval '.info.version' swagger.yaml)
            echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USERNAME --password-stdin
            docker tag menu_api:$MENU_API_VERSION $DOCKER_USERNAME/menu_api:$MENU_API_VERSION
            docker push $DOCKER_USERNAME/menu_api:$MENU_API_VERSION

  deploy:
    circleci_ip_ranges: false
    executor: debian
    steps:
      - checkout
      - install_version_dependencies
      - check_tags
      - install_k8s_dependencies
      - run:
          name: Add Helm repo
          command: |
            helm repo add beantown $HELM_REPO
            kubectl config get-contexts
            kubectl get pods -n prod
      - run:
          name: Deploy menu-api
          command: |
            export MENU_API_VERSION=$(yq eval '.info.version' swagger.yaml)
            helm repo update
            helm upgrade --install menu-api beantown/menu-api \
              --namespace prod \
              --set global.env=prod \
              --set image.tag=$MENU_API_VERSION \
              --set logLevel=$LOG_LEVEL \
              --debug

workflows:
  menu_api_build_and_deploy:
    jobs:
      - build_and_publish
      - deploy:
          requires:
            - build_and_publish
